@article{meshgi2015phd,
  title={Particle filter-based tracking to handle persistent and complex occlusions and imitate arbitrary black-box trackers},
  author={Kourosh, Meshgi},
  year={2015},
  publisher={Kyoto University},
  abstract = {Occlusions, one of the most challenging problems in visual tracking, degrade the performance of many trackers significantly. Taking various spatial and temporal forms, occlusions have not been modeled completely yet. State-of-the-art solutions fail to handle persistent and complex occlusions, and mostly address partial or temporal occlusions. Additionally, the solutions around these problems are not unified, and researchers limit their solutions to a tiny portion of the problem. Despite the large number of studies of handling occlusion, only a few of them have actually studied the occlusion phenomenon itself and devised solutions for occlusion detection and reasoning. Any comprehensive study over different approaches of occlusion handling is deemed missing.
 
To address this shortcoming, this study first presents a comprehensive review on the literature. The occlusion problem is defined, its challenges are described, and several research directions to handle it are distinguished. Next, the state-of-the-art solutions and designs in each research direction are described, discussed and compared, and the strength and weakness of them are clarified. This study facilitates the design of further robust trackers to be built upon previous approaches efficiently.
 
Next, we propose a tracker to detect emergent occlusions, address difficult occlusion scenarios, and perform rapid target recovery after occlusion. This novel method builds upon a particle filter tracker and significantly improves its resilience against various types of occlusions, including persistent and complex occlusions. The objective of this tracker is to extend particles to include an occlusion state, switch observation and motion models based on the occlusion state, weight the observation based on the observation confidence, and employ robust feature fusion. Applied on the Princeton RGBD tracking benchmark, our tracker achieves superior performance and beats the state-of-the-art trackers in terms of tracking performance and speed.

While designing this tracker, a solid understanding about the occlusion is built, leading to proposal of a novel occlusion mask that enhances the observation of any appearance-based tracker, and improves its accuracy significantly during occlusions. To detect occlusions, the proposed method learns the occlusion patterns based on the data collected during tracking with and without occlusions. The obtained mask prevents the observation to be contaminated by data from occluder or background, and works well along with a general occlusion handling scheme in the main tracker. 
 
Another part of this study strives to find the optimal feature set to maximize the tracker performance in various tracking situations even under occlusion. A series of experiments lead to the finding that most of the trackers can be imitated by a unified framework with interchangeable features and their corresponding weights. This method minimizes the tracking mismatches between the target tracker and a tracker that imitates the target tracker. This is made possible by employing dropout mechanism to maximize the similarity between the two trackers above while preventing the solution from overfitting to the limited training data. This mimicking approach is able to shadow many of the state-of-the-art trackers, while it sheds light on the possible inner mechanism of black-box trackers. The imitating tracker also outperforms its multiple target trackers by using their collective tracking knowledge during its training.
 
In summary, this study proposed an occlusion-aware framework to predict and manage various types of occlusions, which was found to enhance the observation quality to be used by arbitrary appearance-based trackers. It also proposed a unified framework to imitate an arbitrary tracker (even humans) by selecting and tuning the appropriate features to shed light on the feature design procedure. Handling these two issues is crucial for designing visual trackers working efficiently and robustly in real environments.}
}
